package com.revature.services;

import java.util.Set;
import java.util.Map;

import com.revature.beans.Comment;
import com.revature.beans.Employee;
import com.revature.beans.Reimbursement;

public interface EmployeeService {
	/**
	 * Returns a Map that provides the possible options that an Employee
	 * can choose to enter for the EventType and GradingFormat fields of
	 * their reimbursement request to ensure that their choices align
	 * with what exists in the database.
	 * 
	 * @return	a map with the keys "eventTypes" and "gradingFormats"
	 */
	public Map<String, Set<Object>> getRequestOptions();
	
	/**
	 * Accepts a new reimbursement request to be created in the database.
	 * <p>
	 * Returns the ID that is generated by the DBMS upon insertion.
	 * 
	 * @param request the new reimbursement request being submitted
	 * @return the new request's generated ID
	 */
	public int submitReimbursementRequest(Reimbursement request);
	
	/**
	 * Returns a Set of the reimbursement requests that have been
	 * submitted by the specific Employee.
	 * 
	 * @param requestor the Employee whose requests will be returned
	 * @return the Set of submitted reimbursement requests
	 */
	public Set<Reimbursement> getReimbursementRequests(Employee requestor);
	
	/**
	 * Returns all of the comments that have been left under the
	 * specified request.
	 * 
	 * @param request the request specifying which comments to return
	 * @return the Set of comments related to the specified request
	 */
	public Set<Comment> getComments(Reimbursement request);
	
	/**
	 * Accepts a new comment to be submitted. The comment should
	 * include the information about the request to which it is
	 * related, as well as the current approver at this step in
	 * the process.
	 * <p>
	 * Returns the ID generated by the DBMS upon insertion.
	 * 
	 * @param comment the new comment being submitted
	 * @return the new comment's generated ID
	 */
	public int addComment(Comment comment);
	
	/**
	 * Returns the Employee that exists in the database with
	 * the specified ID.
	 * 
	 * @param empId the ID of the desired employee
	 * @return the specified employee
	 */
	public Employee getEmployeeById(int empId);
}
